// ----------------- H -----------------

#pragma once
#include "behaviorNode/taskNode.h"

class Å`Å`Task final : public TaskNode
{
public:
	using TaskNode::TaskNode;
	virtual void Init()override;
	virtual NODE_STATE Update(const float& deltaTime) override;
};

// ----------------- CPP-----------------

#include "character/player.h"
#include "character/bossEnemy.h"

void NoNameTask::Init()
{
	ReserveAnimation("asset\\model\\mawJ\\Ç»Ç‹Ç¶.fbx", " ");
	m_TaskName = " ";
}

NODE_STATE NoNameTask::Update(const float& deltaTime)
{
	TaskNode::Update(deltaTime);
	if (m_BossCache == nullptr || m_PlayerCache == nullptr)
	{
		return NODE_STATE::FAILURE;
	}

	BehaviorNode* node = m_BossCache->GetRunningNode();
	if (!CheckRunningNode(node))
	{
		return NODE_STATE::FAILURE;
	}

	// èâä˙âª
	if (node == nullptr)
	{
		m_CurrentTime = 0.0f;
	}

	if (m_CurrentTime < m_MaxAnimTime)
	{
		m_CurrentTime += deltaTime;
		m_BossCache->ChangeAnimation(m_AnimName);
		// èÛë‘Çï€ë∂
		m_BossCache->SetRunningNode(this);

		return NODE_STATE::RUNNING;
	}
	else
	{
		if (node == this)
		{
			// èÛë‘ÇçÌèú
			m_BossCache->SetRunningNode(nullptr);
			return NODE_STATE::SUCCESS;
		}
	}

	return NODE_STATE::FAILURE;
}